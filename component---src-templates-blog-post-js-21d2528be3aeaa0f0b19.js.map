{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_ref","data","pathContext","location","post","markdownRemark","frontmatter","html","title","date","next","prev","a","createElement","dangerouslySetInnerHTML","__html","to","path","m","module","exports","default","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","_loader__WEBPACK_IMPORTED_MODULE_4__","getResourcesForPathnameSync","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","_page_renderer__WEBPACK_IMPORTED_MODULE_3__","Object","assign","key","json","prop_types__WEBPACK_IMPORTED_MODULE_2___default","shape"],"mappings":"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","file":"component---src-templates-blog-post-js-21d2528be3aeaa0f0b19.js","sourcesContent":["import React from 'react'\nimport Link from 'gatsby-link'\nimport Helmet from 'react-helmet'\n\nconst Template = ({ data, location, pathContext }) => {\n  const { markdownRemark: post } = data\n  const { frontmatter, html } = post\n  const { title, date } = frontmatter\n  const { next, prev } = pathContext\n\n  return (\n    <div>\n      <Helmet title={`${title} - My Blog`} />\n\n      <div>\n        <h1>{title}</h1>\n        <h3>{date}</h3>\n\n        <div dangerouslySetInnerHTML={{__html: html}}></div>\n\n        <p>\n          {prev && (\n            <Link to={prev.frontmatter.path}>\n              Previous: {prev.frontmatter.title}\n            </Link>\n          )}\n        </p>\n\n        <p>\n          {next && (\n            <Link to={next.frontmatter.path}>\n              Next: {next.frontmatter.title}\n            </Link>\n          )}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n      markdownRemark(frontmatter: { path: { eq: $path } }) {\n          html\n          frontmatter {\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n              path\n              tags\n              excerpt\n          }\n      }\n  }\n`\n\nexport default Template","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    key: location.pathname,\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}
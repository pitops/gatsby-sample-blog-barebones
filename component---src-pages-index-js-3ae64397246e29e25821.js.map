{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["query","__webpack_exports__","_ref","posts","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","map","_ref2","post","node","frontmatter","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","path","title","date","excerpt","tags","tag","header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","layout_Layout","children","render","Fragment","Helmet_default","site","siteMetadata","meta","name","content","lang","paddingTop","_755544856","propTypes","prop_types_default","isRequired"],"mappings":"gLAwCaA,EAAK,aAmBHC,EAAA,QAtDG,SAAAC,GAAY,IACdC,EADcD,EAAVE,KACUC,kBAArBC,MACP,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACGP,EAAMQ,IAAI,SAAAC,GAAmB,IAAVC,EAAUD,EAAhBE,KACJC,EAAgBF,EAAhBE,YAER,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAIF,EAAYG,MACnBH,EAAYI,QAGjBZ,EAAAC,EAAAC,cAAA,SAAIM,EAAYK,MAChBb,EAAAC,EAAAC,cAAA,SAAIM,EAAYM,SAEhBd,EAAAC,EAAAC,cAAA,UACGI,EAAKE,YAAYO,KAAKX,IAAI,SAAAY,GACzB,OACEhB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACO,EAAA,KAAD,CAAMC,GAAE,SAAWM,GAChBA,oOCKRC,EA7BA,SAAAtB,GAAA,IAAGuB,EAAHvB,EAAGuB,UAAH,OACbC,EAAAlB,EAAAC,cAAA,OACEkB,MAAO,CACLC,WAAY,gBACZC,aAAc,YAGhBH,EAAAlB,EAAAC,cAAA,OACEkB,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,sBAGXN,EAAAlB,EAAAC,cAAA,MAAIkB,MAAO,CAAEG,OAAQ,IACnBJ,EAAAlB,EAAAC,cAACwB,EAAA,KAAD,CACEhB,GAAG,IACHU,MAAO,CACLO,MAAO,QACPC,eAAgB,SAGjBV,OCjBLW,UAAS,SAAAlC,GAAA,IAAGmC,EAAHnC,EAAGmC,SAAH,OACbX,EAAAlB,EAAAC,cAACwB,EAAA,YAAD,CACEjC,MAAK,YASLsC,OAAQ,SAAAlC,GAAI,OACVsB,EAAAlB,EAAAC,cAAAiB,EAAAlB,EAAA+B,SAAA,KACEb,EAAAlB,EAAAC,cAAC+B,EAAAhC,EAAD,CACEW,MAAOf,EAAKqC,KAAKC,aAAavB,MAC9BwB,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,uBAG/BnB,EAAAlB,EAAAC,cAAA,QAAMqC,KAAK,QAEbpB,EAAAlB,EAAAC,cAACe,EAAD,CAAQC,UAAWrB,EAAKqC,KAAKC,aAAavB,QAC1CO,EAAAlB,EAAAC,cAAA,OACEkB,MAAO,CACLG,OAAQ,SACRC,SAAU,IACVC,QAAS,wBACTe,WAAY,IAGbV,KA9BTjC,KAAA4C,MAqCFZ,EAAOa,UAAY,CACjBZ,SAAUa,EAAA1C,EAAUM,KAAKqC,YAGZlD,EAAA","file":"component---src-pages-index-js-3ae64397246e29e25821.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\n\nimport Layout from '../components/layout'\n\nconst IndexPage = ({data}) => {\n  const {edges: posts} = data.allMarkdownRemark\n  return (\n    <Layout>\n      {posts.map(({ node: post}) => {\n        const { frontmatter } = post\n\n        return (\n          <div>\n            <h2>\n              <Link to={frontmatter.path}>\n                {frontmatter.title}\n              </Link>\n            </h2>\n            <p>{frontmatter.date}</p>\n            <p>{frontmatter.excerpt}</p>\n\n            <ul>\n              {post.frontmatter.tags.map(tag => {\n                return (\n                  <li>\n                    <Link to={`/tags/${tag}`}>\n                      {tag}\n                    </Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        )\n      })}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query IndexQuery {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            excerpt\n          }\n        }\n      }\n    }  \n  }\n`\nexport default IndexPage\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Header = ({ siteTitle }) => (\n  <div\n    style={{\n      background: 'rebeccapurple',\n      marginBottom: '1.45rem',\n    }}\n  >\n    <div\n      style={{\n        margin: '0 auto',\n        maxWidth: 960,\n        padding: '1.45rem 1.0875rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: 'white',\n            textDecoration: 'none',\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: '0 auto',\n            maxWidth: 960,\n            padding: '0px 1.0875rem 1.45rem',\n            paddingTop: 0,\n          }}\n        >\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}